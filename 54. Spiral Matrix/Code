class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
     ArrayList<Integer> ans = new ArrayList<>();

        int rowB = 0;
        int colB = 0;
        int rowE = matrix.length - 1;
        int colE = matrix[0].length - 1;

        while(rowB <= rowE && colB <= colE){

            //traverse right
            for (int i = colB; i <= colE; i++){
                ans.add(matrix[rowB][i]);
            }
            rowB++;

            //traverse down
            for(int j = rowB; j <= rowE; j++){
                ans.add(matrix[j][colE]);
            }
            colE--;

            //traverse left
            if(rowB <= rowE){
                for (int k = colE; k >= colB; k--){
                    ans.add(matrix[rowE][k]);
                }
            }
            rowE--;

            //traverse up
            if(colB <= colE){
                for(int l = rowE; l >= rowB; l--){
                    ans.add(matrix[l][colB]);
                }
            }
            colB++;
        }   
       return ans; 
    }
}


//Revised
