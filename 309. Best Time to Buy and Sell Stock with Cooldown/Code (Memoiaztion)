class Solution {
    public int maxProfit(int[] prices) {
        
       int n = prices.length; 
       int[][] dp = new int[n][2];
       for(int[] nums: dp){
           Arrays.fill(nums, -1);
       } 
        
       int ans = helper(0, 1, prices, dp);
       return ans; 
    }
    
    public int helper(int ind, int buy, int[] p, int[][] dp){
        
        if(ind >= p.length) return 0;
        int profit = 0;
        
        if(dp[ind][buy] != -1) return dp[ind][buy];
        
        if(buy == 1){
            profit = Math.max((-p[ind] + helper(ind + 1, 0, p, dp)), 
                              ( 0 + helper(ind + 1, 1, p, dp)));
        }else{
            profit = Math.max((p[ind] + helper(ind + 2, 1, p, dp)),
                              ( 0 + helper(ind + 1, 0, p, dp)));
        }
            
        return dp[ind][buy] = profit;
    }
}
