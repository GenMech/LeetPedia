class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        if(nums2.length < nums1.length){
            return findMedianSortedArrays(nums2, nums1);
        } // just to do binary search for smaller size array
        
        int n1 = nums1.length;
        int n2 = nums2.length;
        int low = 0;
        int high = n1;
        
        while(low <= high){
            
            int cut1 = (low + high) >> 1; // (low + high) / 2
            int cut2 = (n1 + n2 + 1)/2 - cut1;
            
            int L1 = cut1 == 0 ? Integer.MIN_VALUE : nums1[cut1 - 1];
            int L2 = cut2 == 0 ? Integer.MIN_VALUE : nums2[cut2 - 1];
            
            int R1 = cut1 == n1 ? Integer.MAX_VALUE : nums1[cut1];
            int R2 = cut2 == n2 ? Integer.MAX_VALUE : nums2[cut2];
            
            if(L1 <= R2 && L2 <= R1){
                
                if((n1 + n2) % 2 == 0){
                    return (Math.max(L1, L2) + Math.min(R1, R2))/2.0;
                }else return Math.max(L1, L2);
                
            }else if(L1 > R2){
                high = cut1 - 1;
            }else low = cut1 + 1;
        
        }
         return 0.0;   
        }
}
