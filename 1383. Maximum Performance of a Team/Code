class Solution {
    int MOD = 1000000007;
    public int maxPerformance(int n, int[] speed, int[] efficiency, int k) {
        
        int[][] ans = new int[n][2];
        for(int i = 0; i < n; i++){
           ans[i] = new int[]{efficiency[i], speed[i]};
        }
        Arrays.sort(ans, (a,b) -> Integer.compare(b[0], a[0]));
        
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        long totalSp = 0;
        long maxPer = 0;
        for(int[] nums: ans){
            int sp = nums[1];
            pq.add(sp);
            if(pq.size() <= k) totalSp += sp;
            else totalSp += sp - pq.poll();
            maxPer = Math.max(maxPer, totalSp * nums[0]);
        }
       return (int)(maxPer % MOD); 
    }
}

 // Revised
