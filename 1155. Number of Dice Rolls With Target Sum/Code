class Solution {
    private int MOD = (int) Math.pow(10,9) + 7; 
    public int numRollsToTarget(int n, int k, int target) {
        
      int[][] dp = new int[n + 1][target + 1];
      for(int[] nums: dp){
          Arrays.fill(nums, -1);
      }
        
      int ans = helper(n, k, target, dp);
      return ans;  
    
    }
    
    public int helper(int n, int k, int target, int[][] dp){
       
        if(target == 0 && n == 0){
            return 1;
        }
        
        if(target < 0 || n == 0){
            return 0;
        }
        
        if(dp[n][target] != -1){
            return dp[n][target];
        }
        
        int count = 0;
        for(int i = 1; i <= k; i++){
            count = (count + helper(n - 1, k, target - i, dp)) % MOD;
        }
        dp[n][target] = count;
        return dp[n][target];
    }
}
